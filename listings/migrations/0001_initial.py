# Generated by Django 3.1.1 on 2023-01-21 07:53

import datetime
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='city',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('photo_main', models.ImageField(upload_to='photos/%Y/%m/%d/')),
                ('is_published', models.BooleanField(default=True)),
                ('list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '00. Society City',
            },
        ),
        migrations.CreateModel(
            name='Owner_Contact_Us',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=2000)),
                ('location', models.CharField(blank=True, max_length=2000)),
                ('phone_number', models.CharField(blank=True, max_length=2000)),
                ('Mobile_number', models.CharField(blank=True, max_length=2000)),
                ('whatsapp_number', models.CharField(blank=True, max_length=2000)),
                ('fb_id', models.CharField(blank=True, max_length=2000)),
                ('instagram_id', models.CharField(blank=True, max_length=2000)),
                ('gmail_id', models.CharField(blank=True, max_length=2000)),
                ('linkedin_id', models.CharField(blank=True, max_length=2000)),
                ('is_published', models.BooleanField(default=True)),
                ('list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '03. Owner Contact Us',
            },
        ),
        migrations.CreateModel(
            name='Plot_category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('is_published', models.BooleanField(default=True)),
                ('list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '06. Plot Category',
            },
        ),
        migrations.CreateModel(
            name='Plot_phase_details_table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dimension', models.CharField(max_length=200)),
                ('block', models.CharField(max_length=200)),
                ('price', models.CharField(max_length=200)),
                ('contact', models.CharField(max_length=200)),
                ('remarks', models.CharField(max_length=2000)),
                ('is_published', models.BooleanField(default=True)),
                ('list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plot_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.plot_category')),
            ],
            options={
                'verbose_name': '17. Plot Detail Table Society Phase',
            },
        ),
        migrations.CreateModel(
            name='Plot_types',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('is_published', models.BooleanField(default=True)),
                ('list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '05. Plot Type',
            },
        ),
        migrations.CreateModel(
            name='Society',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=200)),
                ('state', models.CharField(max_length=100)),
                ('zipcode', models.CharField(max_length=20)),
                ('photo_main', models.ImageField(upload_to='photos/%Y/%m/%d/')),
                ('is_published', models.BooleanField(default=True)),
                ('list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.city')),
            ],
            options={
                'verbose_name': '01. Society Name',
            },
        ),
        migrations.CreateModel(
            name='Socity_phase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('is_published', models.BooleanField(default=True)),
                ('list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '07. Society Phase',
            },
        ),
        migrations.CreateModel(
            name='Socity_Sector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('is_published', models.BooleanField(default=True)),
                ('list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '12. Society Sector',
            },
        ),
        migrations.CreateModel(
            name='Socity_Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('is_published', models.BooleanField(default=True)),
                ('list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '11. Society Status',
            },
        ),
        migrations.CreateModel(
            name='Socity_tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('is_published', models.BooleanField(default=True)),
                ('list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('society', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='listings.society')),
            ],
            options={
                'verbose_name': '13. Society Tag',
            },
        ),
        migrations.CreateModel(
            name='Socity_Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=200)),
                ('rate', models.DecimalField(decimal_places=1, max_digits=4, max_length=4, null=True)),
                ('is_published', models.BooleanField(default=True)),
                ('list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('society', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='listings.society')),
                ('society_phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.socity_phase')),
            ],
            options={
                'verbose_name': '14. Society Rating',
            },
        ),
        migrations.CreateModel(
            name='Socity_latest_news',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000)),
                ('news_link', models.CharField(max_length=1000, null=True)),
                ('is_published', models.BooleanField(default=True)),
                ('list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('society', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='listings.society')),
                ('society_phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.socity_phase')),
            ],
            options={
                'verbose_name': '10. Society Latest News',
            },
        ),
        migrations.CreateModel(
            name='Society_Youtube_videos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('yut_video_1', models.CharField(blank=True, max_length=2000)),
                ('yut_video_2', models.CharField(blank=True, max_length=2000)),
                ('yut_video_3', models.CharField(blank=True, max_length=2000)),
                ('yut_video_4', models.CharField(blank=True, max_length=2000)),
                ('yut_video_5', models.CharField(blank=True, max_length=2000)),
                ('yut_video_6', models.CharField(blank=True, max_length=2000)),
                ('is_published', models.BooleanField(default=True)),
                ('list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('society', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='listings.society')),
            ],
            options={
                'verbose_name': '02. Society Youtube Videos',
            },
        ),
        migrations.CreateModel(
            name='Society_Phase_Youtube_videos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('yut_video_1', models.CharField(blank=True, max_length=2000)),
                ('yut_video_2', models.CharField(blank=True, max_length=2000)),
                ('yut_video_3', models.CharField(blank=True, max_length=2000)),
                ('yut_video_4', models.CharField(blank=True, max_length=2000)),
                ('yut_video_5', models.CharField(blank=True, max_length=2000)),
                ('yut_video_6', models.CharField(blank=True, max_length=2000)),
                ('is_published', models.BooleanField(default=True)),
                ('list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('society', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='listings.society')),
                ('society_phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.socity_phase')),
            ],
            options={
                'verbose_name': '08. Society Phase Youtube Videos',
            },
        ),
        migrations.CreateModel(
            name='Society_Phase_Home_Page_Images',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('photo_main', models.ImageField(upload_to='photos/%Y/%m/%d/')),
                ('photo_1', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('photo_2', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('photo_3', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('photo_4', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('photo_5', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('photo_6', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('photo_7', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('photo_8', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('photo_9', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('photo_10', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('is_published', models.BooleanField(default=True)),
                ('list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('society', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='listings.society')),
                ('society_phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.socity_phase')),
            ],
            options={
                'verbose_name': '09. Society Phase Home Page Images',
            },
        ),
        migrations.CreateModel(
            name='Society_phase_details_home_page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=2000)),
                ('launch_date', models.CharField(max_length=1000)),
                ('approvals', models.CharField(max_length=1000)),
                ('gas_facilities', models.BooleanField(default=True)),
                ('water_facilities', models.BooleanField(default=True)),
                ('mantaince_facilities', models.BooleanField(default=True)),
                ('secuirty_facilities', models.BooleanField(default=True)),
                ('sav_facilities', models.BooleanField(default=True)),
                ('electricity_facilities', models.BooleanField(default=True)),
                ('transfer_charges', models.CharField(max_length=2000)),
                ('transfer_office', models.CharField(max_length=2000)),
                ('location_on_map', models.CharField(max_length=1000)),
                ('society_location', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('download_location_file', models.CharField(max_length=1000)),
                ('official_website', models.CharField(max_length=1000)),
                ('official_contact_number', models.CharField(max_length=1000)),
                ('posession', models.BooleanField(default=False)),
                ('posession_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('description_and_details_1', tinymce.models.HTMLField(blank=True)),
                ('description_and_details_2', tinymce.models.HTMLField(blank=True)),
                ('is_published', models.BooleanField(default=True)),
                ('list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plot_phase_details_table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.plot_phase_details_table')),
                ('plot_types', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.plot_types')),
                ('sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.socity_sector')),
                ('society', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='listings.society')),
                ('society_phase_home_page_images', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.society_phase_home_page_images')),
                ('society_phase_youtube_videos', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.society_phase_youtube_videos')),
                ('society_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.socity_status')),
            ],
            options={
                'verbose_name': '19. Society Phase Detail Home Page',
            },
        ),
        migrations.CreateModel(
            name='Society_Home_Page_Images',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('photo_main', models.ImageField(upload_to='photos/%Y/%m/%d/')),
                ('photo_1', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('photo_2', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('photo_3', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('photo_4', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('photo_5', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('photo_6', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('photo_7', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('photo_8', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('photo_9', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('photo_10', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('is_published', models.BooleanField(default=True)),
                ('list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('society', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='listings.society')),
            ],
            options={
                'verbose_name': '04. Society Home Page Images',
            },
        ),
        migrations.CreateModel(
            name='Society_details_home_page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=2000)),
                ('launch_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('approvals', models.CharField(max_length=1000)),
                ('facilities', models.CharField(max_length=2000)),
                ('transfer_charges', models.CharField(max_length=2000)),
                ('transfer_office', models.CharField(max_length=2000)),
                ('location_on_map', models.CharField(max_length=1000)),
                ('society_location', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('download_location_file', models.CharField(max_length=1000)),
                ('official_website', models.CharField(max_length=1000)),
                ('official_contact_number', models.CharField(max_length=1000)),
                ('posession', models.BooleanField(default=False)),
                ('posession_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('description_and_details_1', tinymce.models.HTMLField(blank=True)),
                ('description_and_details_2', tinymce.models.HTMLField(blank=True)),
                ('is_published', models.BooleanField(default=True)),
                ('list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plot_types', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.plot_types')),
                ('society', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='listings.society')),
                ('society_home_page_images', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.society_home_page_images')),
                ('society_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.socity_status')),
                ('society_youtube_videos', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.society_youtube_videos')),
            ],
            options={
                'verbose_name': '18. Society Detail Home Page',
            },
        ),
        migrations.AddField(
            model_name='plot_phase_details_table',
            name='plot_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.plot_types'),
        ),
        migrations.AddField(
            model_name='plot_phase_details_table',
            name='society',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.society'),
        ),
        migrations.AddField(
            model_name='plot_phase_details_table',
            name='society_phase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.socity_phase'),
        ),
        migrations.CreateModel(
            name='Plot_details_table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dimension', models.CharField(max_length=200)),
                ('block', models.CharField(max_length=200)),
                ('price', models.CharField(max_length=200)),
                ('contact', models.CharField(max_length=200)),
                ('remarks', models.CharField(max_length=2000)),
                ('is_published', models.BooleanField(default=True)),
                ('list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plot_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.plot_category')),
                ('plot_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.plot_types')),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.society')),
                ('society_phase', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='listings.socity_phase')),
            ],
            options={
                'verbose_name': '16. Plot Detail of Table Society',
            },
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=200, null=True)),
                ('description', tinymce.models.HTMLField(blank=True)),
                ('video_url', models.CharField(max_length=1000, null=True)),
                ('price', models.IntegerField(null=True)),
                ('bedrooms', models.IntegerField(null=True)),
                ('bathrooms', models.DecimalField(decimal_places=1, max_digits=4, null=True)),
                ('garage', models.IntegerField(default=0)),
                ('square_foot', models.IntegerField(null=True)),
                ('plot_size', models.DecimalField(decimal_places=1, max_digits=5, null=True)),
                ('photo_main', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('photo_1', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('photo_2', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('photo_3', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('photo_4', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('photo_5', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('photo_6', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/')),
                ('is_published', models.BooleanField(default=True)),
                ('list_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('society', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='listings.society')),
                ('society_phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='listings.socity_phase')),
            ],
            options={
                'verbose_name': '15. Plot Listing',
            },
        ),
    ]
